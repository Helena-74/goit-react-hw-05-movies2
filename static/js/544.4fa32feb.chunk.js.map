{"version":3,"file":"static/js/544.4fa32feb.chunk.js","mappings":"kKAgBA,IAbmB,SAAbA,EAAc,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,2BACE,SAACD,EAAD,CAAYC,OAAQA,IACnBA,EAAOC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADA,MAOtB,C,6ECdM,IAAME,EAAU,mCACVC,EAAW,8B,yGCsCxB,UAlCa,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,+GAEDC,MAAM,GAAD,OAAIN,EAAAA,EAAJ,uCAA2CD,EAAAA,IAF/C,cAElBQ,EAFkB,gBAGLA,EAASC,OAHJ,OAGlBC,EAHkB,OAIxBN,EAAkBM,EAAKC,SACvBC,QAAQC,IAAIH,GALY,kDAOxBE,QAAQE,MAAM,kCAAd,MAPwB,0DAAH,qDAWzBR,GACD,GAAE,KAGD,4BACE,wBAAI,qBACJ,yBACE,SAAC,IAAD,CAAYZ,OAAQS,QAU3B,C,sBCrCD,SAASY,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KACnB,CAAE,MAAOV,GAEP,YADAI,EAAOJ,EAET,CACIS,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MoviesList/MoviesList.jsx","components/api.jsx","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      <MoviesList movies={movies}/>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\n","export const API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2'; \nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\n","import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from 'components/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n        const data = await response.json();\n        setTrendingMovies(data.results);\n        console.log(data);\n      } catch (error) {\n        console.error(\"Error fetching trending movies:\", error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending Movies</h2>\n      <ul>\n        <MoviesList movies={trendingMovies} />\n        {/* {trendingMovies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))} */}\n      </ul>\n      \n    </div>\n  );\n};\n\nexport default Home;\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","movies","map","movie","to","id","title","API_KEY","BASE_URL","useState","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","fetch","response","json","data","results","console","log","error","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}